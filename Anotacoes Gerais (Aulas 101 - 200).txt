======================================== AULA 101 - E SE EU ESQUECER DE COLOCAR A MENSAGEM NO COMMIT? - EDITOR VIM =========================================

Se você esquecer de especificar a mensagem do commit, o Git Bash vai abrir o VIM para a edição.
Para sair do VIM, tecle 'ESC' e depois digite:
	:q!

========================================= AULA 102 - E SE EU ME PERDER E QUISER VOLTAR AO ESTADO DO COMMIT ATUAL? ==========================================

Descartar todas as modificações, voltando ao estado do commit atual:
	git clean -df
	git checkout -- .

=========================================== AULA 103 - E SE EU QUISER DESFAZER O ÚLTIMO COMMIT? - COMANDO RESET ============================================

- Remover o último commit mantendo as alterações nos arquivos:
	git reset --soft HEAD~1

- Remover o último commit INCLUSIVE as alterações nos arquivos:
	git reset --hard HEAD~1

========================================= AULA 104 - E SE EU QUISER SOMENTE DAR UMA OLHADA EM UMA VERSÃO ANTERIOR? =========================================

- Navegar entre commits, alterando os arquivos temporariamente:
	git checkout hash_do_commit

- Voltar para o último commit:
	git checkout nome_da_branch

======================================== AULA 107 - ASSOCIANDO O REPOSITÓRIO LOCAL AO REPOSITÓRIO REMOTO DO GITHUB =========================================

- Associar nosso repositório local ao repositório remoto, dando o apelido de "origin" a ele:
	git remote add origin URI_do_repositorio_remoto

- Associar o repositório local a um repositório remoto, porém mantendo o mesmo apelido:
	git remote set-url origin URI_do_repositorio_remoto

================================================ AULA 108 - TRANSFERINDO O REPOSITÓRIO LOCAL PARA O GITHUB =================================================

- Transferindo o repositório local para o Github:
	git push -u origin master

NOTA: se você usou a opção -u, nas próximas vezes quer for subir o branc master, basta fazer:
	git push